name: Build
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types: [published]

env:
  curl_options: '-f -O -L --connect-timeout 15 -m 900 --retry 15 --retry-delay 10 --retry-max-time 300 --retry-all-errors'
  make_jobs: '4'
  gmp_version: '6.3.0'
  m4_version: '1.4.19'
  nettle_version: '3.10.1'
  gnutls_version: '3.7.11'

jobs:
  build:
    name: Build 123
    runs-on: windows-11-arm
    steps:
    
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            m4
    
      - name: Set extra version variables
        shell: bash
        run: |
          echo "gnutls_version_short=$(echo ${{env.gnutls_version}} | cut -d '.' -f 1-2)" >> $GITHUB_ENV
    
      - name: ls
        shell: bash
        run: |
          ls -la /
          uname -a
          gcc -v

      - name: dir
        shell: cmd
        run: dir c:\

      - name: Set prefix path
        shell: bash
        run: echo "prefix_path=/c/strawberry_msvc" >> $GITHUB_ENV

      - name: Create prefix path
        shell: bash
        run: mkdir -p ${{env.prefix_path}}

      - name: Create directories
        shell: bash
        run: mkdir -p ${{env.prefix_path}}/{bin,lib,include}

      - name: Create downloads directory
        shell: bash
        run: mkdir downloads

      - name: Create build directory...
        shell: bash
        run: mkdir build


      - name: Download nettle
        shell: bash
        working-directory: downloads
        run: curl ${{env.curl_options}} https://www.lysator.liu.se/~nisse/archive/nettle-${{env.nettle_version}}.tar.gz

      - name: Extract nettle
        shell: bash
        working-directory: build
        run: tar -xf ../downloads/nettle-${{env.nettle_version}}.tar.gz

      - name: Configure nettle
        shell: bash
        working-directory: build/nettle-${{env.nettle_version}}
        run: ./configure --prefix="${{env.prefix_path}}" --disable-static --enable-shared --disable-documentation

      - name: Build nettle
        shell: bash
        working-directory: build/nettle-${{env.nettle_version}}
        run: make -j ${{env.make_jobs}}

      - name: Install nettle
        shell: bash
        working-directory: build/nettle-${{env.nettle_version}}
        run: make install


      - name: Download GnuTLS
        shell: bash
        working-directory: downloads
        run: curl ${{env.curl_options}} https://www.gnupg.org/ftp/gcrypt/gnutls/v${{env.gnutls_version_short}}/gnutls-${{env.gnutls_version}}.tar.xz

      - name: Extract GnuTLS
        shell: bash
        working-directory: build
        run: tar -xf ../downloads/gnutls-${{env.gnutls_version}}.tar.xz

      - name: Configure GnuTLS
        shell: bash
        working-directory: build/gnutls-${{env.gnutls_version}}
        run: ./configure --prefix="${{env.prefix_path}}" --disable-static --enable-shared --disable-dependency-tracking --disable-silent-rules --disable-nls --enable-rpath --disable-doc --disable-tests --without-p11-kit

      - name: Build GnuTLS
        shell: bash
        working-directory: build/gnutls-${{env.gnutls_version}}
        run: make -j ${{env.make_jobs}}

      - name: Install GnuTLS
        shell: bash
        working-directory: build/gnutls-${{env.gnutls_version}}
        run: make install


      - name: Download m4
        shell: bash
        working-directory: downloads
        run: curl ${{env.curl_options}} https://ftp.gnu.org/gnu/m4/m4-${{env.m4_version}}.tar.gz

      - name: Extract m4
        shell: bash
        working-directory: build
        run: tar -xf ../downloads/m4-${{env.m4_version}}.tar.gz

      - name: Configure m4
        shell: bash
        working-directory: build/m4-${{env.m4_version}}
        run: |
          #autoreconf -vfi
          ./configure --host="$(gcc -dumpmachine | sed 's|-msys$|-cygwin|')" --prefix=/c/strawberry_msvc --with-syscmd-shell=/usr/bin/sh --disable-nls --sysconfdir=/etc --localstatedir=/var --enable-threads CC=gcc

      - name: file Makefile
        shell: bash
        working-directory: build/m4-${{env.m4_version}}
        run: sed -n '213,213'p Makefile

      - name: file Makefile
        shell: bash
        working-directory: build/m4-${{env.m4_version}}
        run: dos2unix Makefile

      - name: Build m4
        shell: bash
        working-directory: build/m4-${{env.m4_version}}
        run: make -j ${{env.make_jobs}}

      - name: Install m4
        shell: bash
        working-directory: build/m4-${{env.m4_version}}
        run: make install


      - name: Download gmp
        shell: bash
        working-directory: downloads
        #run: curl ${{env.curl_options}} https://gmplib.org/download/gmp/gmp-${{env.gmp_version}}.tar.xz
        run: curl ${{env.curl_options}} https://files.jkvinge.net/packages/strawberry-dependencies/gmp-${{env.gmp_version}}.tar.xz

      - name: Extract gmp
        shell: bash
        working-directory: build
        run: tar -xf ../downloads/gmp-${{env.gmp_version}}.tar.xz

      - name: Configure gmp
        shell: bash
        working-directory: build/gmp-${{env.gmp_version}}
        run: ./configure --prefix="${{env.prefix_path}}" --disable-static --enable-shared -enable-cxx --without-readline

      - name: Build gmp
        shell: bash
        working-directory: build/gmp-${{env.gmp_version}}
        run: make -j ${{env.make_jobs}}

      - name: Install gmp
        shell: bash
        working-directory: build/gmp-${{env.gmp_version}}
        run: make install
